#!/usr/bin/python3

import os.path
from urllib.request import urlopen
from urllib.error import HTTPError
from argparse import ArgumentParser

from SteamDB import SteamDB, safefilename

def grabimage(remotepath, localpath):
    if os.path.exists(localpath):
        pass
    else:
        with urlopen(remotepath) as stream:
            with open(localpath, 'wb') as outfile:
                outfile.write(stream.read())
        print('Wrote {}.'.format(localpath))
        


def main():
    parser = ArgumentParser(description='Downloads Steam Logo images.')
    parser.add_argument('-o', dest='outpath',
                       default='Steam Text Logos',
                       help='Output path. If not specified, will output to '
                        'a subdirectory called "Steam Text Logos"')
    parser.add_argument('profileid_or_path', 
                       help='Steam profile ID or file path. If your Steam profile URL is '
                       '"http://steamcommunity.com/profiles/12345/", then the ID would be '
                       '12345. If this matches a file on the filesystem, it is assumed'
                       'to be a download of your profile.')

    args = parser.parse_args()
    
    try:
        steam = SteamDB(args.profileid_or_path)
        
        if not os.path.exists(args.outpath):
            os.mkdir(args.outpath)
        
        for app in steam.db.values():
            remotepath = "http://cdn.akamai.steamstatic.com/steam/apps/{}/logo.png".format(
                app['appid'])
            localpath = os.path.join(args.outpath, safefilename(app['name']) + '.png')
            try:
                grabimage(remotepath, localpath)
            except HTTPError:
                # Silently fail on missing games to avoid noise during 
                # transition to new library images formats
                pass
    except Exception as problem:
        print('Unable to download images: {}'.format(problem))

if __name__ == '__main__':
    main()
